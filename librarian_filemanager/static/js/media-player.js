// Generated by CoffeeScript 1.10.0
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

(function(window, $, templates) {
  'use strict';
  var MediaPlayer;
  MediaPlayer = (function() {
    var currentItemClass, detailUnits, optionSelectors;

    currentItemClass = 'playlist-list-item-current';

    optionSelectors = {
      itemSelector: '#playlist-list .playlist-list-item',
      currentItemClass: currentItemClass,
      currentItemSelector: '.' + currentItemClass
    };

    function MediaPlayer(container, features, callbacks) {
      var defaultCallbacks, options;
      this.container = container;
      this.onPlayerReady = bind(this.onPlayerReady, this);
      this.onReady = bind(this.onReady, this);
      defaultCallbacks = {
        ready: (function(_this) {
          return function() {
            _this.onReady();
          };
        })(this),
        setCurrent: (function(_this) {
          return function(item) {
            _this.onSetCurrent(item);
          };
        })(this)
      };
      options = $.extend({}, optionSelectors, features, defaultCallbacks, callbacks);
      console.log(options);
      this.playlist = new Playlist(this.container, options);
      return;
    }

    MediaPlayer.prototype.onReady = function() {};

    MediaPlayer.prototype.onPlayerReady = function(mediaElement) {
      this.player = mediaElement;
    };

    MediaPlayer.prototype.onSetCurrent = function(item) {
      this.updatePlayer(item);
      this.updateDetails(item);
      window.changeLocation(item.data('url'));
    };

    MediaPlayer.prototype.updatePlayer = function(item) {
      var media_url, wasPlaying;
      media_url = item.data('direct-url');
      wasPlaying = !this.player.paused;
      if (wasPlaying) {
        this.player.pause();
      }
      this.player.setSrc(media_url);
      if (wasPlaying) {
        this.player.play();
      }
    };

    detailUnits = {
      'title': '.playlist-item-title',
      'artist': '.playlist-item-artist',
      'author': '.playlist-item-author',
      'description': '.playlist-item-description'
    };

    MediaPlayer.prototype.updateDetails = function(item) {
      var detailsContainer, results, selector, unit, value;
      detailsContainer = this.container.find('#playlist-item-details').first();
      results = [];
      for (unit in detailUnits) {
        selector = detailUnits[unit];
        value = item.data(unit);
        if (value) {
          results.push(detailsContainer.find(selector).html(value));
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    MediaPlayer.prototype.next = function() {
      this.playlist.next();
    };

    MediaPlayer.prototype.previous = function() {
      this.playlist.previous();
    };

    return MediaPlayer;

  })();
  return window.MediaPlayer = MediaPlayer;
})(this, this.jQuery, this.templates);
