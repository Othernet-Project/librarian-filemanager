// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

(function(window, $, templates) {
  'use strict';
  var VideoPlayer, prepareVideo;
  VideoPlayer = (function(superClass) {
    extend(VideoPlayer, superClass);

    function VideoPlayer() {
      return VideoPlayer.__super__.constructor.apply(this, arguments);
    }

    VideoPlayer.prototype.onReady = function() {
      this.controls = this.container.find('#video-controls-video').first();
      return this.controls.mediaelementplayer({
        features: ['playpause', 'progress', 'duration', 'volume', 'fullscreen'],
        success: (function(_this) {
          return function(mediaElement) {
            _this.onPlayerReady(mediaElement);
          };
        })(this),
        error: (function(_this) {
          return function() {
            _this.controls.prepend(templates.videoLoadFailure);
          };
        })(this)
      });
    };

    VideoPlayer.prototype.updatePlayer = function(item) {
      VideoPlayer.__super__.updatePlayer.call(this, item);
      this.player.play();
    };

    return VideoPlayer;

  })(MediaPlayer);
  prepareVideo = function() {
    var controls, player;
    controls = $('#video-controls');
    if (!controls.length) {
      return;
    }
    player = new VideoPlayer($('#views-container'));
  };
  prepareVideo();
  window.onTabChange(prepareVideo);
})(this, this.jQuery, this.templates);
